AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: CloudFormation Macro to create Systems Manager SecureString Params

Globals:
  Function:
    Timeout: 3

Resources:
  CfnMacroFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ssm_securestring_cfn_macro/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Role:
        Fn::GetAtt:
          - CfnMacroRole
          - Arn
      Layers:
        - Ref: Layer

  Layer:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: python3.9
      BuildArchitecture: x86_64
    Properties:
      CompatibleArchitectures:
        - x86_64
      CompatibleRuntimes:
        - python3.9
      ContentUri: layer/
      LayerName: ssm-securestring-cfn-macro

  CfnMacroRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: CreateLogGroupPermission
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  Fn::Sub: "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*"
        - PolicyName: SSMParamPermission
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssm:PutParameter
                  - ssm:DeleteParameter
                Resource:
                  Fn::Sub: "arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*"
      RoleName:
        Fn::Sub: "${AWS::StackName}-role"

  CfnMacro:
    Type: AWS::CloudFormation::Macro
    Properties:
      FunctionName:
        Fn::GetAtt:
          - CfnMacroFunction
          - Arn
      Name:
        Fn::Sub: "${AWS::StackName}-macro"

Outputs:
  FunctionName:
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-function-name"
    Value:
      Ref: CfnMacroFunction

  FunctionArn:
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-function-arn"
    Value:
      Fn::GetAtt:
        - CfnMacroFunction
        - Arn

  LayerArn:
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-layer-arn"
    Value:
      Ref: Layer

  RoleArn:
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-role-arn"
    Value:
      Fn::GetAtt:
        - CfnMacroRole
        - Arn

  MacroName:
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-macro-name"
    Value:
      Ref: CfnMacro
